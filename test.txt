import os
import pandas as pd
import subprocess

def create_test_files():
    # Create a main input file
    df_main = pd.DataFrame({
        'user_id': [1, 2, 3, 3],
        'email': ['a@example.com', 'b@example.com', 'c@example.com', 'c@example.com'],
        'age': [25, None, 30, 30],
        'sentence': ['The cat sat on the mat.', 'The cat is on the mat.', 'A dog barked.', 'The cat sat on the mat.'],
        'city': ['New York', 'New York', 'Chicago', 'Chicago']
    })
    df_main.to_csv('main_test.csv', index=False)

    # Create a merge file
    df_merge = pd.DataFrame({
        'user_id': [1, 2, 3],
        'email': ['a@example.com', 'b@example.com', 'c@example.com'],
        'gender': ['M', 'F', 'M']
    })
    df_merge.to_csv('merge_test.csv', index=False)

def run_preprocess():
    cmd = [
        'python', 'preprocess.py',
        '--input', 'main_test.csv',
        '--output', 'cleaned_test.csv',
        '--merge', 'merge_test.csv',
        '--on', 'user_id,email',
        '--clean',
        '--deduplicate',
        '--impute', 'mode',
        '--transform', 'normalize',
        '--encode', 'label',
        '--fuzzy_dedup',
        '--fuzzy_threshold', '90',
        '--semantic_dedup',
        '--semantic_column', 'sentence',
        '--semantic_threshold', '0.9'
    ]

    print("üöÄ Running preprocess pipeline...")
    result = subprocess.run(cmd, capture_output=True, text=True)

    print("üîÅ STDOUT:")
    print(result.stdout)
    print("‚ö†Ô∏è STDERR (if any):")
    print(result.stderr)

def verify_output():
    if os.path.exists('cleaned_test.csv'):
        df = pd.read_csv('cleaned_test.csv')
        print(f"‚úÖ Output file created with {len(df)} rows and {df.shape[1]} columns.")
        print(df.head())
    else:
        print("‚ùå Output file not found!")

if __name__ == "__main__":
    create_test_files()
    run_preprocess()
    verify_output()
